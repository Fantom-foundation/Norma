name: Go-Linux

on:
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/go-linux.yml'
      - '**.go'
      - '**.yml'
      - '**.R'
      - '**.Rmd'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/go-linux.yml'
      - '**.go'
      - '**.yml'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    # Restore dependencies that take a long time to install between builds
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/R
        # Dependencies are stored in readme, so hash that
        key: ${{ runner.os }}-r-${{ hashFiles('README.md') }}

    - name: Set up R
      uses: r-lib/actions/setup-r@v2

    - name: Install R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        working-directory: ./analysis/report

    # Store dependencies
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/R
        key: ${{ runner.os }}-r-${{ hashFiles('README.md') }}

#    - name: Fetch Docker test-image
#      run: docker image pull hello-world
#
#    - name: Fetch Docker alpine-image
#      run: docker image pull alpine
#
#    - name: Fetch Prometheus image
#      run: docker image pull prom/prometheus:v2.44.0
#
#    - name: Create Docker Cache Storage Backend
#      run: |
#        docker buildx create --use --driver=docker-container
#
#    - name: Build Docker Image
#      uses: docker/build-push-action@v4
#      with:
#        context: .
#        load: true
#        build-args: |
#          "DOCKER_BUILDKIT=1"
#        push: false
#        cache-from: type=gha
#        cache-to: type=gha,mode=max
#
#    - name: Build
#      working-directory: ./
#      run: go build -v ./...
#
#    - name: Test
#      working-directory: ./
#      run: go test -count=1 ./...
