// Norma CI test norma using "make test"

pipeline {
	agent { label 'norma' }
	
	options {
		timestamps ()
		timeout(time: 3, unit: 'HOURS')
		disableConcurrentBuilds(abortPrevious: true)
	}

	environment {
		GOROOT = '/usr/local/go'
		DOCKER_API_VERSION = 1.45
	}

	stages {
		stage('Check Norma Format') {
			steps {
				catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
					sh 'diff=`${GOROOT}/bin/gofmt -l \$(find . -type f -name "*.go"| grep -v "/client/")`; echo "$diff"; test -z "$diff"'
				}
			}
		}

		stage('Make Norma') {
			steps {
				sh 'make clean'
				sh 'git submodule update --init --recursive'
				sh 'make all'
			}
		}

		stage('Test Norma') {
			steps {
				sh 'make test'
			}
		}

		stage('Test All Baseline Scenarios') {
			steps {
				script {
					def test_scenarios = findFiles(glob: '**/test/*.yml')
					test_scenarios.each { scenario ->
						sh "build/norma run ${scenario.path}"
					}
				}
			}
		}
	}
}
